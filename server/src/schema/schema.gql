
type ContactPerson {
	id: ID!
	fullName: String
	mobile: String
}

interface Customer {
	id: ID!
	name: String!
	loans: [Loan]
}

type JuridicalCustomer implements Customer {
	id: ID!
	name: String!
	loans: [Loan]
	registrationNumber: String
	contactPersons: [ContactPerson]
}

type PhysicalCustomer implements Customer {
	id: ID!
	name: String!
	loans: [Loan]
	firstName: String
	lastName: String
	age: Int
}

type JuridicalCustomer {
	id: ID!
	name: String!
	loans: [Loan]
}


type Loan {
	id: ID!
	name: String
}


# This type specifies the entry points into our API
type Query {
	customers: [Customer]    # "[]" means this is a list of channels
	customer(id: ID!): Customer
}

# The mutation root type, used to define all mutations
type Mutation {
	customerAdd(type: String!, name: String!): Customer
}

# The subscription root type, specifying what we can subscribe to
type Subscription {
	customerAdded(): Customer
}
